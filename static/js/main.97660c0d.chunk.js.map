{"version":3,"sources":["components/Card/Card.module.css","components/Card/CardInfo/CardInfo.module.css","components/Header/Header.module.css","components/contentComponents/Reviews/Reviews.module.css","components/Footer/Footer.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","header.svg","components/Header/Header.jsx","api/api.js","Redux/reviews-reducer.js","components/Card/Card.jsx","components/contentComponents/Reviews/Reviews.jsx","constants.js","components/contentComponents/Popular/PopularContainer.jsx","components/contentComponents/Deals/DealsContainer.jsx","components/contentComponents/Gaming/GamingContainer.jsx","components/contentComponents/Entertainment/EntertainmentContainer.jsx","components/contentComponents/Reviews/ReviewsContainer.jsx","components/Card/CardInfo/CardInfo.jsx","components/Card/CardInfo/CardInfoContainer.jsx","components/Body/Body.jsx","components/Footer/Footer.jsx","components/Navbar/Navbar.jsx","Redux/redux-store.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","id","x","y","width","height","xlinkHref","SvgHeader","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","viewBox","style","filter","ref","ForwardRef","Header","className","classes","header","reviewsAPI","reviews","cardId","popularAPI","popular","gamingAPI","gaming","dealsAPI","deals","entertainmentAPI","entertainment","SET_REVIEWS","SET_CARD_INFO","SET_CURRENT_PAGE","initialState","cardInfo","currentPage","setCurrentPage","type","payload","setReviews","setCardInfo","reviewsReducer","state","action","Card","review","mainDiv","to","buttonDiv","button","cardMedia","src","img","alt","cardContent","cardTitle","Reviews","map","r","PAGES","PopularContainer","dispatch","useDispatch","useSelector","reviewsPage","useEffect","a","response","DealsContainer","GamingContainer","EntertainmentContainer","ReviewsContainer","CardInfo","content","titleImg","text","reviewImg","linkToBuy","href","rel","end","CardInfoContainer","useParams","getCardInfo","getCardInfoPopular","getCardInfoGaming","getCardInfoEntertainment","getCardInfoDeals","Body","path","element","Footer","footer","CustomLink","children","resolved","useResolvedPath","match","useMatch","pathname","padding","backgroundColor","borderRadius","color","textDecoration","Navbar","nav","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","App","AppContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97660c0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"Card_mainDiv__3l4ut\",\"buttonDiv\":\"Card_buttonDiv__3ydhH\",\"button\":\"Card_button___-7Qi\",\"cardMedia\":\"Card_cardMedia__i6lnd\",\"cardContent\":\"Card_cardContent__3GL_L\",\"cardTitle\":\"Card_cardTitle__349XA\",\"cardMainText\":\"Card_cardMainText__jVEdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CardInfo_content__3MB7d\",\"titleImg\":\"CardInfo_titleImg__3qGXW\",\"reviewImg\":\"CardInfo_reviewImg__3gtn2\",\"title\":\"CardInfo_title__1V6tl\",\"text\":\"CardInfo_text__DDoqz\",\"button\":\"CardInfo_button__2ShoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3btAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Reviews_reviews__s2C9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1-68P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__300wt\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"\\\\u0421\\\\u043B\\\\u043E\\\\u0439_1\",\n  x: 8,\n  y: 8,\n  width: 1751,\n  height: 342,\n  xlinkHref: \"data:img/png;base64,\"\n});\n\nfunction SvgHeader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 175,\n    height: 38,\n    viewBox: \"0 0 1767 367\",\n    style: {\n      filter: \"invert(100%) sepia(0%) saturate(7495%) hue-rotate(260deg) brightness(99%) contrast(98%)\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeader);\nexport default __webpack_public_path__ + \"static/media/header.4f610e79.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {ReactComponent as HeaderLogo} from '../../header.svg'\r\n\r\nconst Header = () => {\r\n\treturn <div className={classes.header}>\r\n\t\t<header>\r\n\t\t\t<HeaderLogo />\r\n\t\t</header>\r\n\t</div>\r\n}\r\n\r\nexport default Header;","import reviews from '../stock/reviews/reviews.json'\r\nimport popular from '../stock/popular/popular.json'\r\nimport gaming from '../stock/gaming/gaming.json'\r\nimport deals from '../stock/deals/deals.json'\r\nimport entertainment from '../stock/entertainment/entertainment.json'\r\n\r\n\r\nexport const reviewsAPI = {\r\n\tgetReviews() {\r\n\t\treturn reviews.reviews\r\n\t},\r\n\tgetByFindReview(cardId) {\r\n\t\treturn reviews.reviews.filter(reviews => {\r\n\t\t\treturn reviews.id === +cardId;\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const popularAPI = {\r\n\tgetPopular() {\r\n\t\treturn popular.popular\r\n\t},\r\n\tgetByFindPopular(cardId) {\r\n\t\treturn popular.popular.filter(popular => {\r\n\t\t\treturn popular.id === +cardId;\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const gamingAPI = {\r\n\tgetGaming() {\r\n\t\treturn gaming.gaming\r\n\t},\r\n\tgetByFindGaming(cardId) {\r\n\t\treturn gaming.gaming.filter(gaming => {\r\n\t\t\treturn gaming.id === +cardId;\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const dealsAPI = {\r\n\tgetDeals() {\r\n\t\treturn deals.deals\r\n\t},\r\n\tgetByFindDeals(cardId) {\r\n\t\treturn deals.deals.filter(deals => {\r\n\t\t\treturn deals.id === +cardId;\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// EntertainmentContainer\r\nexport const entertainmentAPI = {\r\n\tgetEntertainment() {\r\n\t\treturn entertainment.entertainment\r\n\t},\r\n\tgetByFindEntertainment(cardId) {\r\n\t\treturn entertainment.entertainment.filter(entertainment => {\r\n\t\t\treturn entertainment.id === +cardId;\r\n\t\t})\r\n\t}\r\n}","import {dealsAPI, entertainmentAPI, gamingAPI, popularAPI, reviewsAPI} from \"../api/api\";\r\n\r\nconst SET_REVIEWS = 'SET_REVIEWS';\r\nconst SET_CARD_INFO = 'SET_CARD_INFO';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\n\r\n\r\nconst initialState = {\r\n\treviews: [],\r\n\tcardInfo:{},\r\n\tcurrentPage: null\r\n}\r\n\r\nconst reviewsReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_REVIEWS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\treviews: action.payload\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.payload\r\n\t\t\t}\r\n\t\tcase SET_CARD_INFO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardInfo: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, payload: currentPage})\r\n\r\nexport const setReviews = (reviews) => ({type: SET_REVIEWS, payload: reviews})\r\nexport const setCardInfo = (cardInfo) => ({type: SET_CARD_INFO, payload: cardInfo})\r\n\r\n// Reviews\r\nexport const requestReviews = () => async (dispatch) => {\r\n\tconst response = reviewsAPI.getReviews();\r\n\tdispatch(setReviews(response));\r\n}\r\nexport const getCardInfo = (cardId) => async (dispatch) => {\r\n\tconst response = reviewsAPI.getByFindReview(cardId);\r\n\tdispatch(setCardInfo(response));\r\n}\r\n\r\n// Popular\r\nexport const requestPopular = () => async (dispatch) => {\r\n\tconst response = popularAPI.getPopular();\r\n\tdispatch(setReviews(response));\r\n}\r\nexport const getCardInfoPopular = (cardId) => async (dispatch) => {\r\n\tconst response = popularAPI.getByFindPopular(cardId);\r\n\tdispatch(setCardInfo(response));\r\n}\r\n\r\n\r\n// Gaming\r\nexport const requestGaming = () => async (dispatch) => {\r\n\tconst response = gamingAPI.getGaming();\r\n\tdispatch(setReviews(response));\r\n}\r\nexport const getCardInfoGaming = (cardId) => async (dispatch) => {\r\n\tconst response = gamingAPI.getByFindGaming(cardId);\r\n\tdispatch(setCardInfo(response));\r\n}\r\n\r\n// Deals\r\nexport const requestDeals = () => async (dispatch) => {\r\n\tconst response = dealsAPI.getDeals();\r\n\tdispatch(setReviews(response));\r\n}\r\nexport const getCardInfoDeals = (cardId) => async (dispatch) => {\r\n\tconst response = dealsAPI.getByFindDeals(cardId);\r\n\tdispatch(setCardInfo(response));\r\n}\r\n\r\n// EntertainmentContainer\r\nexport const requestEntertainment = () => async (dispatch) => {\r\n\tconst response = entertainmentAPI.getEntertainment();\r\n\tdispatch(setReviews(response));\r\n}\r\nexport const getCardInfoEntertainment = (cardId) => async (dispatch) => {\r\n\tconst response = entertainmentAPI.getByFindEntertainment(cardId);\r\n\tdispatch(setCardInfo(response));\r\n}\r\n\r\nexport default reviewsReducer;","import React from 'react';\r\nimport classes from './Card.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Card = ({review,currentPage}) => {\r\n\treturn (\r\n\t\t<div className={classes.mainDiv} key={review.id}>\r\n\t\t\t<NavLink to={`/${currentPage}/` + review.id}>\r\n\t\t\t\t<div className={classes.buttonDiv}>\r\n\t\t\t\t\t<div className={classes.button}>\r\n\t\t\t\t\t\t<img className={classes.cardMedia} src={review.img} alt={review.title}/>\r\n\t\t\t\t\t\t<div className={classes.cardContent}>\r\n\t\t\t\t\t\t\t<div className={classes.cardTitle}>\r\n\t\t\t\t\t\t\t\t{review.title}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from \"../../Card/Card\";\r\nimport classes from './Reviews.module.css'\r\n\r\nconst Reviews = ({reviews, currentPage}) => {\r\n\treturn <div className={classes.reviews}>\r\n\t\t{\r\n\t\t\treviews.map(r => <Card review={r}\r\n\t\t\t                       currentPage={currentPage}\r\n\t\t\t                       key={r.id}\r\n\t\t\t/>)\r\n\t\t}\r\n\t</div>\r\n}\r\n\r\nexport default Reviews;","export const PAGES = {\r\n\tpopular: \"popular\",\r\n\treviews: \"reviews\",\r\n\tgaming: \"gaming\",\r\n\tentertainment: \"entertainment\",\r\n\tdeals: \"deals\"\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestPopular, setCurrentPage} from \"../../../Redux/reviews-reducer\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const PopularContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector(state => state.reviewsPage.reviews);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\r\n\r\n\tuseEffect(()=> {\r\n\t\tdispatch(requestPopular());\r\n\t\tdispatch(setCurrentPage(PAGES.popular))\r\n\t},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<Reviews reviews={reviews} currentPage={currentPage} />\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestDeals, setCurrentPage} from \"../../../Redux/reviews-reducer\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const DealsContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector(state => state.reviewsPage.reviews);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\r\n\tuseEffect(()=> {\r\n\t\tdispatch(requestDeals());\r\n\t\tdispatch(setCurrentPage(PAGES.deals))\r\n\t},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<Reviews reviews={reviews} currentPage={currentPage} />\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestGaming, setCurrentPage} from \"../../../Redux/reviews-reducer\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const GamingContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector(state => state.reviewsPage.reviews);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\r\n\tuseEffect(()=> {\r\n\t\tdispatch(requestGaming());\r\n\t\tdispatch(setCurrentPage(PAGES.gaming))\r\n\t},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<Reviews reviews={reviews} currentPage={currentPage} />\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestEntertainment, setCurrentPage} from \"../../../Redux/reviews-reducer\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const EntertainmentContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector(state => state.reviewsPage.reviews);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\r\n\tuseEffect(()=> {\r\n\t\tdispatch(requestEntertainment());\r\n\t\tdispatch(setCurrentPage(PAGES.entertainment))\r\n\t},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<Reviews reviews={reviews} currentPage={currentPage} />\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport Reviews from \"./Reviews\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestReviews, setCurrentPage} from \"../../../Redux/reviews-reducer\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const ReviewsContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector(state => state.reviewsPage.reviews);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\r\n\r\n\tuseEffect(()=> {\r\n\t\tdispatch(requestReviews());\r\n\t\tdispatch(setCurrentPage(PAGES.reviews))\r\n\t},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<Reviews reviews={reviews} currentPage={currentPage} />\r\n\t)\r\n}","import React from 'react';\r\nimport classes from './CardInfo.module.css'\r\n\r\nconst CardInfo = ({cardInfo}) => {\r\n\treturn (\r\n\t\t<div className={classes.content}>\r\n\t\t\t<div className={classes.titleImg}>\r\n\t\t\t\t<img src={cardInfo[0] && cardInfo[0].img} alt={cardInfo[0] && cardInfo[0].title}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.title}>\r\n\t\t\t\t<h3>{cardInfo[0] && cardInfo[0].title}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.text}>\r\n\t\t\t\t{\r\n\t\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\t\tcardInfo[0] && Object.keys(cardInfo[0].text).map(key => {\r\n\t\t\t\t\t\tif (cardInfo[0].text[key]) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={key}>\r\n\t\t\t\t\t\t\t\t\t<h3> {cardInfo[0].text[key].title}</h3>\r\n\t\t\t\t\t\t\t\t\t{cardInfo[0].text[key].img &&\r\n\t\t\t\t\t\t\t\t\t<div className={classes.reviewImg}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={cardInfo[0].text[key].img}\r\n\t\t\t\t\t\t\t\t\t\t     alt={cardInfo[0].text[key].title || cardInfo[0].title}/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{cardInfo[0].text[key].linkToBuy &&\r\n\t\t\t\t\t\t\t\t\t<div className={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t<a href={cardInfo[0].text[key].linkToBuy} target={\"_blank\"}\r\n\t\t\t\t\t\t\t\t\t\t   rel={\"noreferrer\"}>Buy from Amazon</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<p>{cardInfo[0].text[key].text}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<h5>{cardInfo[0] && cardInfo[0].end}</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CardInfo;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n\tgetCardInfo,\r\n\tgetCardInfoDeals,\r\n\tgetCardInfoEntertainment,\r\n\tgetCardInfoGaming,\r\n\tgetCardInfoPopular\r\n} from \"../../../Redux/reviews-reducer\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {PAGES} from \"../../../constants\";\r\n\r\nexport const CardInfoContainer = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst cardInfo = useSelector(state => state.reviewsPage.cardInfo);\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\tconst {id: cardId} = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (currentPage) {\r\n\t\t\tcase PAGES.reviews:\r\n\t\t\t\tdispatch (getCardInfo(cardId))\r\n\t\t\t\tbreak\r\n\t\t\tcase PAGES.popular:\r\n\t\t\t\tdispatch (getCardInfoPopular(cardId))\r\n\t\t\t\tbreak\r\n\t\t\tcase PAGES.gaming:\r\n\t\t\t\tdispatch (getCardInfoGaming(cardId))\r\n\t\t\t\tbreak\r\n\t\t\tcase PAGES.entertainment:\r\n\t\t\t\tdispatch (getCardInfoEntertainment(cardId))\r\n\t\t\t\tbreak\r\n\t\t\tcase PAGES.deals:\r\n\t\t\t\tdispatch (getCardInfoDeals(cardId))\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}, [cardId]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t  <CardInfo cardInfo={cardInfo} />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {PopularContainer} from \"../contentComponents/Popular/PopularContainer\";\r\nimport {DealsContainer} from \"../contentComponents/Deals/DealsContainer\";\r\nimport {GamingContainer} from \"../contentComponents/Gaming/GamingContainer\";\r\nimport {EntertainmentContainer} from \"../contentComponents/Entertainment/EntertainmentContainer\";\r\nimport {ReviewsContainer} from \"../contentComponents/Reviews/ReviewsContainer\";\r\nimport {CardInfoContainer} from \"../Card/CardInfo/CardInfoContainer\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Body = () => {\r\n\tconst currentPage = useSelector(state => state.reviewsPage.currentPage)\r\n\treturn <Routes>\r\n\t\t<Route path={`/`} element={<Navigate to={\"/popular\"}/>}/>\r\n\t\t<Route path={`/popular/*`} element={<PopularContainer/>}/>\r\n\t\t<Route path={`/reviews/*`} element={<ReviewsContainer/>}/>\r\n\t\t<Route path={`/gaming/*`} element={<GamingContainer/>}/>\r\n\t\t<Route path={`/entertainment/*`} element={<EntertainmentContainer/>}/>\r\n\t\t<Route path={`/deals/*`} element={<DealsContainer/>}/>\r\n\t\t<Route path={`/${currentPage}/:id`} element={<CardInfoContainer/>}/>\r\n\t</Routes>\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport classes from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className={classes.footer}>\r\n\t\t\t<footer>© 2022 | created by Roman</footer>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink, useMatch, useResolvedPath} from \"react-router-dom\";\r\nimport {LinkProps} from \"react-router-dom\";\r\n\r\nconst CustomLink = ({children, to, ...props}: LinkProps) => {\r\n\tlet resolved = useResolvedPath(to);\r\n\tlet match = useMatch({path: resolved.pathname, end: true});\r\n\r\n\treturn (\r\n\t\t<div style={{padding: \"10px\", backgroundColor: match ? \"white\" : \"#303134\" /*#202124*/, borderRadius: '20px 20px 0 0'}}>\r\n\t\t\t<NavLink\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: match ? \"red\" : 'var(--color-txt-body)',\r\n\t\t\t\t\ttextDecoration: \"none\"\r\n\t\t\t\t}}\r\n\t\t\t\tto={to}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<CustomLink to='/popular'>Popular</CustomLink>\r\n\t\t\t<CustomLink to='/reviews'>Reviews</CustomLink>\r\n\t\t\t<CustomLink to='/gaming'>Gaming</CustomLink>\r\n\t\t\t<CustomLink to='/entertainment'>Entertainment</CustomLink>\r\n\t\t\t<CustomLink to='/deals'>Deals</CustomLink>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport reviewsReducer from \"./reviews-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n\treviewsPage: reviewsReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import './App.css';\nimport Header from \"./components/Header/Header\";\nimport Body from \"./components/Body/Body\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\nconst App = ()=> {\n\treturn (\n\t\t<div className=\"app-wrapper\">\n\t\t\t<div className=\"row-fill\">\n\t\t\t\t<div className=\"row-item\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<Navbar/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row-content\">\n\t\t\t\t<div className=\"row-item\">\n\t\t\t\t\t<Body/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row-fill\">\n\t\t\t\t<div className=\"row-item\">\n\t\t\t\t\t<Footer/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst AppContainer = () => {\n\treturn <HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</HashRouter>\n}\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <AppContainer />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}